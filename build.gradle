plugins {
    id 'groovy'
    id 'maven-publish'
    id 'idea'
    id 'com.jfrog.artifactory' version '4.24.18'
}

group = 'com.jfrog.bintray.gradle'
version = currentVersion

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation gradleApi()
    implementation('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude(module: 'groovy')
    }
    implementation('org.apache.maven.resolver:maven-resolver-ant-tasks:1.2.0')
    compileOnly('org.apache.maven:maven-project:2.0.11')
    testRuntimeOnly('org.apache.maven:maven-project:2.0.11')
    testImplementation('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude(module: 'groovy-all')
    }
//    testImplementation('com.jfrog.bintray.client:bintray-client-java-api:0.4')
//    testImplementation('com.jfrog.bintray.client:bintray-client-java-service:0.4')
//    testImplementation('com.jfrog.bintray.client:bintray-client-java-impl:0.1.1')
    testImplementation('org.codehaus.gpars:gpars:1.2.1')
    testImplementation('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')
}

test {
    useJUnitPlatform()
    if (System.getProperty('testsDebug', 'true').toBoolean()) {
        testLogging {
            exceptionFormat "full"
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            minGranularity 0
        }
    }
    systemProperties = [
            'http.proxyHost': System.getProperty('http.proxyHost'),
            'http.proxyPort': System.getProperty('http.proxyPort'),
            'http.proxyUser': System.getProperty('http.proxyUser'),
            'http.proxyPassword': System.getProperty('http.proxyPassword')
    ]
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'
tasks.withType(Javadoc) {
    options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = 'A gradle plugin for publishing to Bintray'
                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "yoav"
                        name = "Yoav Landman"
                        email = "yoavl@jfrog.com"
                    }
                }
            }
        }
    }
}

task createReleasePropertiesFile(type:Exec) {
    doLast {
        String fileName = 'bintray.plugin.release.properties'
        println 'Creating $fileName'
        String fileContent = "version=$currentVersion"
        (new File("$rootDir/src/main/resources/$fileName")).write(fileContent)
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
            password = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')
        }
        defaults {
            publications('mavenJava')
            properties = ['bintray.repo': 'jfrog/jfrog-jars', 'bintray.package': 'gradle-bintray-plugin', 'bintray.version': version.toString()]
        }
    }
}

//bintray {
//    user = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
//    key = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')
//    publications = ['mavenJava']
//    pkg {
//        repo = 'jfrog-jars'
//        userOrg = 'jfrog'
//        name = 'gradle-bintray-plugin'
//        licenses = ['Apache-2.0']
//        version {
//            attributes = ['gradle-plugin': 'com.jfrog.bintray:com.jfrog.bintray.gradle:gradle-bintray-plugin']
//        }
//    }
//}

tasks.register('install', Copy) {
    dependsOn 'publishMavenJavaPublicationToMavenLocal'
    doLast {
        logger.info "Installing $project.name"
    }
}